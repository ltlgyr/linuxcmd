[ status ]
0, create 
1, Untracked  
2, tracked
3, unstage
4, stage
5, uncommit
6, coummit

[ config ]
git config --global user.name   <name>
git config --global user.email  <email>

[ create ]
git add 
git commit -m  
git push 
[ git clone ]
	git clone --depth=1    repo_url.git
git pull 

git clean
git push -f

[ branch ctrl ]
git branch  -D
git branch -a
git checkout

git status 
git diff --cached 
git log 
git show 

git reflog 
interactive  branch 
[ git merge ] 
	git merge --squash master 


interactive  commit
[ git rebase ]
	git rebase -i [startpoint] [endpoint]
	如果合并中间的几个commit,会产生一个临时的分支,基于这个临时分支，创建一个新的分支 feature/temp
	再切回 master分支, 执行:git rebase feature/temp

	git rebase --abort 来撤销修改



git stash 
git stash pop 

[ patch  ]
git format-patch -n 
git apply --stat xxx.patch 
git apply --check xxx.patch
git am --signoff < xxx.patch 


[ backcode ]
git reset --hare  ID

[ delete branch ]
git push origin --delete  currentbranch
git push origin HEAD -f

[git log]
git log --oneline 
git log --stat  
git log -p    & git show 
git shortlog 
git log --pretty="%cn committed %h on %cd"
git log --author="name"
git log -n
git log --after "12-30-2019"
git log --before  "1-1-2020"
git log --until=1.minute.ago      before 1.
git log --since=1.day.ago
git log --since=1.hour.ago

git log --merges 
git log --no-merges 
git log --decoreate
git log branch -- filename 
git log --grep="text in commit"
git log --all-match --grep="text in commit" --author="text in author"

git log --graph

git tag -a v0.1 -m "version 0.1 released" 3628164
